[{"name":"expect fun getPlatformName(): String","description":"getPlatformName","location":"ktor-boost/[root]/get-platform-name.html","searchKeys":["getPlatformName","expect fun getPlatformName(): String","getPlatformName"]},{"name":"inline suspend fun <R, T : R> Result<T>.recoverSuspend(crossinline transform: suspend (exception: Throwable) -> R): Result<R>","description":"recoverSuspend","location":"ktor-boost/[root]/recover-suspend.html","searchKeys":["recoverSuspend","inline suspend fun <R, T : R> Result<T>.recoverSuspend(crossinline transform: suspend (exception: Throwable) -> R): Result<R>","recoverSuspend"]},{"name":"inline suspend fun <R, T> Result<T>.foldSuspend(crossinline onSuccess: suspend (value: T) -> R, crossinline onFailure: suspend (exception: Throwable) -> R): R","description":"foldSuspend","location":"ktor-boost/[root]/fold-suspend.html","searchKeys":["foldSuspend","inline suspend fun <R, T> Result<T>.foldSuspend(crossinline onSuccess: suspend (value: T) -> R, crossinline onFailure: suspend (exception: Throwable) -> R): R","foldSuspend"]},{"name":"inline suspend fun <R, T> Result<T>.mapSuspend(crossinline transform: suspend (value: T) -> R): Result<R>","description":"mapSuspend","location":"ktor-boost/[root]/map-suspend.html","searchKeys":["mapSuspend","inline suspend fun <R, T> Result<T>.mapSuspend(crossinline transform: suspend (value: T) -> R): Result<R>","mapSuspend"]},{"name":"inline suspend fun <R> runCatchingSuspend(crossinline block: suspend () -> R): Result<R>","description":"runCatchingSuspend","location":"ktor-boost/[root]/run-catching-suspend.html","searchKeys":["runCatchingSuspend","inline suspend fun <R> runCatchingSuspend(crossinline block: suspend () -> R): Result<R>","runCatchingSuspend"]},{"name":"inline suspend fun <R> runSafeSuspendCatching(block: () -> R): Result<R>","description":"runSafeSuspendCatching","location":"ktor-boost/[root]/run-safe-suspend-catching.html","searchKeys":["runSafeSuspendCatching","inline suspend fun <R> runSafeSuspendCatching(block: () -> R): Result<R>","runSafeSuspendCatching"]},{"name":"inline suspend fun <T, R> T.runCatchingSuspend(crossinline block: suspend T.() -> R): Result<R>","description":"runCatchingSuspend","location":"ktor-boost/[root]/run-catching-suspend.html","searchKeys":["runCatchingSuspend","inline suspend fun <T, R> T.runCatchingSuspend(crossinline block: suspend T.() -> R): Result<R>","runCatchingSuspend"]},{"name":"inline suspend fun <T> HttpClient.deleteResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"deleteResult","location":"ktor-boost/[root]/delete-result.html","searchKeys":["deleteResult","inline suspend fun <T> HttpClient.deleteResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","deleteResult"]},{"name":"inline suspend fun <T> HttpClient.deleteResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"deleteResultAsync","location":"ktor-boost/[root]/delete-result-async.html","searchKeys":["deleteResultAsync","inline suspend fun <T> HttpClient.deleteResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","deleteResultAsync"]},{"name":"inline suspend fun <T> HttpClient.getResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"getResult","location":"ktor-boost/[root]/get-result.html","searchKeys":["getResult","inline suspend fun <T> HttpClient.getResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","getResult"]},{"name":"inline suspend fun <T> HttpClient.getResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"getResultAsync","location":"ktor-boost/[root]/get-result-async.html","searchKeys":["getResultAsync","inline suspend fun <T> HttpClient.getResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","getResultAsync"]},{"name":"inline suspend fun <T> HttpClient.headResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"headResult","location":"ktor-boost/[root]/head-result.html","searchKeys":["headResult","inline suspend fun <T> HttpClient.headResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","headResult"]},{"name":"inline suspend fun <T> HttpClient.headResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"headResultAsync","location":"ktor-boost/[root]/head-result-async.html","searchKeys":["headResultAsync","inline suspend fun <T> HttpClient.headResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","headResultAsync"]},{"name":"inline suspend fun <T> HttpClient.optionsResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"optionsResult","location":"ktor-boost/[root]/options-result.html","searchKeys":["optionsResult","inline suspend fun <T> HttpClient.optionsResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","optionsResult"]},{"name":"inline suspend fun <T> HttpClient.optionsResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"optionsResultAsync","location":"ktor-boost/[root]/options-result-async.html","searchKeys":["optionsResultAsync","inline suspend fun <T> HttpClient.optionsResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","optionsResultAsync"]},{"name":"inline suspend fun <T> HttpClient.patchResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"patchResult","location":"ktor-boost/[root]/patch-result.html","searchKeys":["patchResult","inline suspend fun <T> HttpClient.patchResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","patchResult"]},{"name":"inline suspend fun <T> HttpClient.patchResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"patchResultAsync","location":"ktor-boost/[root]/patch-result-async.html","searchKeys":["patchResultAsync","inline suspend fun <T> HttpClient.patchResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","patchResultAsync"]},{"name":"inline suspend fun <T> HttpClient.postResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"postResult","location":"ktor-boost/[root]/post-result.html","searchKeys":["postResult","inline suspend fun <T> HttpClient.postResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","postResult"]},{"name":"inline suspend fun <T> HttpClient.postResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"postResultAsync","location":"ktor-boost/[root]/post-result-async.html","searchKeys":["postResultAsync","inline suspend fun <T> HttpClient.postResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","postResultAsync"]},{"name":"inline suspend fun <T> HttpClient.putResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","description":"putResult","location":"ktor-boost/[root]/put-result.html","searchKeys":["putResult","inline suspend fun <T> HttpClient.putResult(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Result<T>","putResult"]},{"name":"inline suspend fun <T> HttpClient.putResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","description":"putResultAsync","location":"ktor-boost/[root]/put-result-async.html","searchKeys":["putResultAsync","inline suspend fun <T> HttpClient.putResultAsync(urlString: String, noinline block: HttpRequestBuilder.() -> Unit = {}): Deferred<Result<T>>","putResultAsync"]},{"name":"inline suspend fun <T> Result<T>.onFailureSuspend(crossinline action: suspend (exception: Throwable) -> Unit): Result<T>","description":"onFailureSuspend","location":"ktor-boost/[root]/on-failure-suspend.html","searchKeys":["onFailureSuspend","inline suspend fun <T> Result<T>.onFailureSuspend(crossinline action: suspend (exception: Throwable) -> Unit): Result<T>","onFailureSuspend"]},{"name":"inline suspend fun <T> Result<T>.onSuccessSuspend(crossinline action: suspend (value: T) -> Unit): Result<T>","description":"onSuccessSuspend","location":"ktor-boost/[root]/on-success-suspend.html","searchKeys":["onSuccessSuspend","inline suspend fun <T> Result<T>.onSuccessSuspend(crossinline action: suspend (value: T) -> Unit): Result<T>","onSuccessSuspend"]}]